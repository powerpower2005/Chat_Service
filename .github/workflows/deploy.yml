name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Minikube
        uses: medyagh/setup-minikube@master
      
      # 1. Registry 네임스페이스 및 서비스 배포
      - name: Deploy Registry
        run: |
          cd terraform/stage1-registry
          terraform init
          terraform apply -auto-approve
          
          # Registry가 준비될 때까지 대기
          kubectl wait --for=condition=available --timeout=60s deployment/registry -n registry
          # 포트 포워딩
          kubectl port-forward -n registry svc/registry 5000:5000 &
          sleep 10
      
      # 2. 이미지 빌드 및 푸시
      - name: Build and Push Images
        run: |
          # Backend 이미지
          cd backend
          docker build -t localhost:5000/chat-backend:${{ github.sha }} .
          docker push localhost:5000/chat-backend:${{ github.sha }}
          
          # Frontend 이미지
          cd ../frontend
          docker build -t localhost:5000/chat-frontend:${{ github.sha }} .
          docker push localhost:5000/chat-frontend:${{ github.sha }}
      
      # 3. 나머지 인프라 (MongoDB, Redis 등) 배포
      - name: Deploy Infrastructure
        run: |
          cd terraform/stage2-infra
          terraform init
          terraform apply -auto-approve
          
          # MongoDB와 Redis가 준비될 때까지 대기
          kubectl wait --for=condition=available --timeout=60s deployment/mongodb -n chat-dev
          kubectl wait --for=condition=available --timeout=60s deployment/redis -n chat-dev
      
      # 4. 애플리케이션 배포
      - name: Deploy Applications
        run: |
          cd terraform/stage3-apps
          
          # 현재 커밋 SHA를 이미지 태그로 사용
          export TF_VAR_backend_version=${{ github.sha }}
          export TF_VAR_frontend_version=${{ github.sha }}
          
          terraform init
          terraform apply -auto-approve 