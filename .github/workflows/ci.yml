name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # 모든 태그 정보를 가져오기 위해 필요
      
      - name: Read version from yaml
        id: read_version
        run: |
          MAJOR_MINOR=$(yq eval '.version.major_minor' .github/version.yml)
          echo "major_minor=$MAJOR_MINOR" >> $GITHUB_OUTPUT
      
      - name: Generate version
        id: version
        run: |
          # 현재 major.minor 버전의 가장 최신 태그 찾기
          latest_tag=$(git tag -l "${{ steps.read_version.outputs.major_minor }}.*" | sort -V | tail -n 1)
          
          if [ -z "$latest_tag" ]; then
            new_patch=0
          else
            current_patch=$(echo $latest_tag | cut -d. -f3)
            new_patch=$((current_patch + 1))
          fi
          
          new_version="${{ steps.read_version.outputs.major_minor }}.$new_patch"
          echo "version=$new_version" >> $GITHUB_OUTPUT
          
          git tag $new_version
          git push origin $new_version

      - name: Build and push to local registry
        run: |
          docker build -t localhost:5000/your-app:${{ steps.version.outputs.version }} .
          docker push localhost:5000/your-app:${{ steps.version.outputs.version }}
          
          docker tag localhost:5000/your-app:${{ steps.version.outputs.version }} localhost:5000/your-app:latest
          docker push localhost:5000/your-app:latest